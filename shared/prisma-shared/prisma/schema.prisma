generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int

  @@index([authorId])
}

model Snippet {
  id           Int            @id @default(autoincrement())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now())
  code         String         @db.Text
  language     String
  description  String?
  author       User           @relation(fields: [authorId], references: [id])
  authorId     Int
  TagOnSnippet TagOnSnippet[]

  @@index([authorId])
}

model Tag {
  id       Int            @id @default(autoincrement())
  name     String         @unique
  snippets TagOnSnippet[]

  @@index([id])
}

model TagOnSnippet {
  snippetId Int
  tagId     Int

  snippet Snippet @relation(fields: [snippetId], references: [id])
  tag     Tag     @relation(fields: [tagId], references: [id])

  @@id([snippetId, tagId])
  @@index([snippetId])
  @@index([tagId])
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique

  @@index([userId])
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  name     String?
  posts    Post[]
  snippets Snippet[]
  profile  Profile?

  @@index([id])
}
